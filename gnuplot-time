#!/bin/bash
#
# Plot tab separated values time series data


usage() {
	cat <<EOF
Usage: `basename $0` [--help] [--pdf FILENAME] ( FILE [FIELD...] )...

--show      - show the plot script
--noplot    - do not run gnuplot
--logscale  - use a logrythmic scale
--nolines   - do not use lines to join the points
--xcol N    - specify the column number for the X axis
--ylabel X  - set the y label
--smooth    - apply some simple smoothing to plot
--days      - Show time as days since start of year

Files a tab separated data, first column has epoch date data.  Comments are
allowed and specially formatted comments can name the columns.
EOF
}

SET_LINES="set style data lines"
PLOT=true
OUT=screen
XCOL=1
X_FORMAT="%Y-%m-%d %H:%M"
X_TITLE="Time"
Y_TITLE="units"
while [ -n "$1" ]; do
	case "$1" in
		--show)
			SHOW=true ;;
		--noplot)
			unset PLOT ;;
		--log|--logscale)
			SET_LOGSCALE="set logscale y" ;;
		--nolines)
			SET_LINES="" ;;
		--pdf)
			OUT=pdf
			OUTFILENAME=$2
			shift ;;
		--ps)
			OUT=postscript
			OUTFILENAME=$2
			shift ;;
		--days)
			X_FORMAT="%j"
			X_TITLE="Days"
			;;
		--smooth)
			SMOOTH="smooth bezier"
			;;
		--xcol|-x)
			XCOL=$2;
			shift ;;
		--ylabel)
			Y_TITLE="$2";
			shift ;;
		--help)
			usage
			exit 0 ;;
		-)
			# FIXME this munges quoting
			ARGS="$ARGS $1" ;;
		-*)
			echo Unknown option $1
			usage
			exit 1 ;;
		*)
			# FIXME this munges quoting
			ARGS="$ARGS $1" ;;
	esac
	shift
done
set -- $ARGS

if [ -z "$1" ]; then
	echo need filename
	exit 1
fi

TEMPFILE=`tempfile`

(
	#echo $"set label 'generated by `whoami` at `date +%Y-%m-%d`' at 1,1"
	cat <<EOF
		set timestamp 'generated by `whoami` at %Y-%m-%d %H:%M:%S'
		set title 'Time series Plot'
		set xlabel '$X_TITLE'
		set ylabel '$Y_TITLE'

		$SET_LINES
		set timefmt '%s'
		set xdata time
		set format x "$X_FORMAT"
		set xtics out rotate by -35
		set mouse clipboardformat 5
		set mouse mouseformat 5
		set grid

		$SET_LOGSCALE
EOF

	if [ "$OUT" = "pdf" ]; then
		echo $"set terminal pdf size 11,8"
		echo $"set output '$OUTFILENAME'"
	elif [ "$OUT" = "postscript" ]; then
		echo $"set terminal postscript color solid"
		echo $"set output '$OUTFILENAME'"
	fi
	echo

	LINE=""
	for f in $*; do
		if [ -e $f ]; then
			# This arg is a filename
			FILE=$f
			continue
		fi

		case "$f" in
		f:*)
			# This arg is a function
			THIS='('`echo $f |cut -d: -f2-`')'
			;;
		*)
			# This arg is a column

			# try to guess the column name
			FIELD=`head -500 $FILE | egrep "^#column $f " |head -1 | cut -d" " -f3-`

			if [ -n "$FIELD" ]; then
				TITLE="$FIELD:"
			else
				TITLE=""
			fi
			TITLE="$TITLE$FILE:$f"
			THIS="'$FILE' using $XCOL:$f $SMOOTH title '$TITLE'"
			;;
		esac

		if [ -n "$LINE" ]; then
			LINE="$LINE,"
		fi
		LINE="$LINE $THIS"
	done

	if [ -z "$LINE" ]; then
		# default to column 2, if none are on the cmdline
		LINE="'$FILE' using $XCOL:2 title '$FILE:2'"
		
	fi

	echo "plot $LINE"
	echo

	if [ "$OUT" = "screen" ]; then
		echo $"pause mouse close"
	fi

) >$TEMPFILE

if [ -n "$SHOW" ]; then
	cat $TEMPFILE
fi

if [ -n "$PLOT" ]; then
	gnuplot $TEMPFILE </dev/null
fi

rm -f $TEMPFILE

