#!/usr/bin/env perl
use warnings;
use strict;
#
# Plot tab separated values time series data

use File::Spec;

# allow the libs to be in the bin dir
use FindBin;
use lib File::Spec->catdir($FindBin::RealBin,"lib");
use lib File::Spec->catdir($ENV{HOME},"s/bin/lib");

use Data::Dumper;
$Data::Dumper::Indent = 1;
$Data::Dumper::Sortkeys = 1;
$Data::Dumper::Quotekeys = 0;

use File::Temp qw( tempfile );

use HC::Common;

my $option = {
};
my @option_list = (
    "show",
    "noplot",
    "logscale|log",
    "nolines",
    "xcol|x=s",
    "ylabel=s",
    "smooth",
    "days",
    "pdf=s",
    "ps=s",
);

sub usage() {
    print <<EOF
Usage: $0 [--help] [--pdf FILENAME] ( FILE [FIELD...] )...

--show      - show the plot script
--noplot    - do not run gnuplot
--logscale  - use a logrythmic scale
--nolines   - do not use lines to join the points
--xcol N    - specify the column number for the X axis
--ylabel X  - set the y label
--smooth    - apply some simple smoothing to plot
--days      - Show time as days since start of year

Files a tab separated data, first column has epoch date data.  Comments are
allowed and specially formatted comments can name the columns.
EOF
}

my $SET_LINES="set style data lines";
my $OUT='screen';
my $XCOL=1;
my $X_FORMAT="%Y-%m-%d %H:%M";
my $X_TITLE="Time (GMT)";
my $Y_TITLE="units";

my $SET_LOGSCALE='';
my $OUTFILENAME;
my $SMOOTH='';

sub main() {
    HC::Common::do_options($option,@option_list);
    if (defined($option->{help})) {
        usage();
        return -1;
    };

    if ($option->{logscale}) {
        $SET_LOGSCALE="set logscale y";
    }
    if ($option->{nolines}) {
        $SET_LINES='';
    }
    if ($option->{pdf}) {
        $OUT='pdf';
        $OUTFILENAME=$option->{pdf};
    }
    if ($option->{ps}) {
        $OUT='postscript';
        $OUTFILENAME=$option->{ps};
    }
    if ($option->{days}) {
        $X_FORMAT="%j";
        $X_TITLE="Days";
    }
    if ($option->{smooth}) {
        $SMOOTH="smooth bezier";
    }
    if ($option->{xcol}) {
        $XCOL=$option->{xcol};
    }
    if ($option->{ylabel}) {
        $Y_TITLE=$option->{ylabel};
    }

    if (!defined($ARGV[0])) {
        print("need filename\n");
        return -1;
    }

    my ($fh,$TEMPFILE) = tempfile();

    #echo $"set label 'generated by `whoami` at `date +%Y-%m-%d`' at 1,1"
    $fh->print(<<EOF
        set timestamp 'generated by $ENV{LOGNAME} at %Y-%m-%d %H:%M:%S'
        set title 'Time series Plot'
        set xlabel '$X_TITLE'
        set ylabel '$Y_TITLE'

        $SET_LINES
        set timefmt '%s'
        set xdata time
        set format x "$X_FORMAT"
        set xtics out rotate by -35
        set mouse clipboardformat 5
        set mouse mouseformat 5
        set grid ytics mytics lw 2, lw 1
        set autoscale fix

        set key left top Left title 'Legend' box 3

        $SET_LOGSCALE
EOF
    );

    if ($OUT eq 'pdf') {
        $fh->print("set terminal pdf size 11,8\n");
        $fh->print("set output '$OUTFILENAME'\n");
    } elsif ($OUT eq "postscript") {
        $fh->print("set terminal postscript color solid\n");
        $fh->print("set output '$OUTFILENAME'\n");
    }
    $fh->print("\n");

    my $FILECMD;
    my $FILE;
    my $FILE_TITLE;

    my $LINE;
    for my $f (@ARGV) {

        if ( -e $f ) {
            # This arg is a filename
            if ( $f =~ m/\.gz$/ ) {
                $FILECMD="gzip -dc $f";
            } elsif ( $f =~ m/\.xz$/ ) {
                $FILECMD="xz -dc $f";
            } else {
		$FILE=$f;
                $FILECMD=undef;
            }

            if (defined($FILECMD)) {
                $FILE="<$FILECMD";
            } else {
                $FILECMD="cat $FILE";
            }
            $FILE_TITLE=$f;
            next;
        }

        my $THIS;

        if ( $f =~ m/^f:(.*)/ ) {
            # This arg is a function
            $THIS='('.$1.')';
        } else {
            # This arg is a column

            # try to guess the column name
            my $FIELD=`$FILECMD | head -500 | egrep "^#column $f " |head -1 | cut -d" " -f3-`;

            my $TITLE;
            if ($FIELD ne '') {
                $TITLE="$FIELD=";
            } else {
                $TITLE="";
            }

            $TITLE="$TITLE$FILE_TITLE:$f";
            $THIS="'$FILE' using $XCOL:$f $SMOOTH title '$TITLE'";
        }

        if (defined($LINE)) {
            $LINE.=",";
        }
        $LINE.="$THIS";
    }

    if (!defined($LINE)) {
        # default to column 2, if none are on the cmdline
        $LINE="'$FILE' using $XCOL:2 title '$FILE:2'";
    }

    $fh->print("plot $LINE\n");
    $fh->print("\n");

    if ($OUT eq 'screen') {
        $fh->print("pause mouse close\n");
    }
#

    if ($option->{show}) {
	print `cat $TEMPFILE`;
    }

    if (!defined($option->{noplot})) {
	`gnuplot $TEMPFILE </dev/null`;
    }

    unlink($TEMPFILE);
    return 0;
}
exit main();

__END__

# TODO
- handle "-" as a filename

